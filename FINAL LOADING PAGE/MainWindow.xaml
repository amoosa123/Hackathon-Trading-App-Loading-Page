<Window x:Class="FINAL_LOADING_PAGE.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FINAL_LOADING_PAGE"
        mc:Ignorable="d"
        Title="MainWindow" Height="694" Width="1280"  >
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" 
                                   StrokeDashArray="1 2" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                   SnapsToDevicePixels="true" 
                                   StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="15,15,15,15">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" 
                                     Value="true">
                                <Setter Property="Background" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" 
                                        TargetName="contentPresenter" 
                                        Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
            <Setter Property="Foreground" 
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" 
                    Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" 
                    Value="Left"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="15,15,15,15">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" 
                                     Value="false">
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Offset="0" Color="#CB2D7F"/>
                <GradientStop Offset="1" Color="#003366"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Label Style="{DynamicResource LabelStyle1}" 
               Content="TradeMind" 
               HorizontalAlignment="Center" 
               Height="600" 
               VerticalAlignment="Center" 
               Width="450" 
               FontSize="50" 
               FontWeight="Bold" 
               HorizontalContentAlignment="Center" 
               Background="#FFD9D9D9"/>
        <Label Content="Welcome to TradeMind!&#xD;&#xA;&#xD;&#xA;In the vast financial expense, &#xD;&#xA;harnessing the power of &#xD;&#xA;Artificial Intelligence to decode, &#xD;&#xA;anticipate, and navigate the world &#xD;&#xA;of stocks &#xD;&#xA;is no longer a choice; &#xD;&#xA;it's a necessity&#xD;&#xA;&#xD;&#xA;With TradeMind, we're at the &#xD;&#xA;forefront of &#xD;&#xA;this fintech evolution. " 
               HorizontalAlignment="Center" 
               Height="510" 
               VerticalAlignment="Top" 
               Width="396" 
               Margin="0,129,0,0" 
               FontSize="22"/>

        <Button Content="Get Started! " 
                Margin="570,539,570,68" 
                FontSize="20" 
                Background="#FFF3F3F3">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="BorderBrush" 
                            Value="Black"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="True">
                            <Setter Property="BorderBrush" 
                                    Value="#CB2D7F"/>
                        </Trigger>
                        <Trigger Property="IsPressed" 
                                 Value="True">
                            <Setter Property="BorderBrush" 
                                    Value="#003366"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Ellipse HorizontalAlignment="Left" 
                 Height="84" 
                 Margin="1182,6,0,0" 
                 Stroke="White" 
                 VerticalAlignment="Top" 
                 Width="88" 
                 Fill="#FFF3F3F3"/>
        <Image HorizontalAlignment="Left" 
               Height="113" 
               Margin="1171,-13,0,0" 
               VerticalAlignment="Top" 
               Width="110" 
               Source="/Chatbot.png"/>
        <Image HorizontalAlignment="Left"
               Height="357" 
               Margin="551,177,0,0" 
               VerticalAlignment="Top" 
               Width="397" 
               Source="/Logo.png"/>
    </Grid>
</Window>
